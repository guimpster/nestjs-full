version: "3.3"
services:

  elasticsearch:
    image: elasticsearch:7.4.0
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "abc123"
      MYSQL_DATABASE: "teste"
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/
    ports:
      - 3306:3306

  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - mysql
    network_mode: host

  zookeeper:
    container_name: test-zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:5.5.3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # to understand listeners, go to: https://www.confluent.io/blog/kafka-listeners-explained/
  kafka:
    container_name: test-kafka
    hostname: kafka
    image: confluentinc/cp-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092 # is a comma-separated list of listeners and the host/IP and port to which Kafka binds to for listening
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092 # is a comma-separated list of listeners with their host/IP and port. This is the metadata thatâ€™s passed back to clients
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # defines key/value pairs for the security protocol to use per listener name
      # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT# Kafka brokers communicate between themselves, usually on the internal network
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DELETE_TOPIC_ENABLE: 'true'

  # command: docker-compose exec kafkacat kafkacat -b kafka:29092 -L
  kafkacat:
    image: confluentinc/cp-kafkacat
    command: sleep infinity

  # https://github.com/confluentinc/schema-registry
  confluent-schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1-1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      # please replace this setting by the IP of your web tools server
      SCHEMA_REGISTRY_HOST_NAME: "localhost"
    depends_on:
      - zookeeper
      - kafka

  # https://github.com/confluentinc/kafka-rest
  confluent-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.3.1-1
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://confluent-schema-registry:8081/
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: GET,POST,PUT,DELETE,OPTIONS
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      # please replace this setting by the IP of your web tools server
      KAFKA_REST_HOST_NAME: "0.0.0.0"
    depends_on:
      - confluent-schema-registry

  # NOT WORKING
  # https://github.com/Landoop/kafka-topics-ui
  # access trough http://localhost:8000/#/ instead of what the terminal says ;)
  # kafka-topics-ui:
  #   image: landoop/kafka-topics-ui:0.9.4
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     KAFKA_REST_PROXY_URL: http://confluent-rest-proxy:8082
  #     PROXY: "TRUE"
  #   depends_on:
  #     - confluent-rest-proxy
